//Tape.java
// CS 201 HW 5.5
//
// $ Gabrielle Beaulieu

import structure5.*;

public class Tape {

	// instance variables
	protected char current;
	protected Stack<Character> right;
	protected Stack<Character> left;

	
	public Tape()
	//constructs new Tape
	{
		current = '*';
		right = new StackList<Character>();
		left = new StackList<Character>();
	}

	
	public void store(char c) 
	//stores character c in current tape head
	{
		current = c;
		return;
	}

	
	public void left() 
	//moves tape head one cell left
	{
		if (left.empty()) {
			left.add('*');
		}
		right.add(current);
		current = left.get();
		left.pop();
	}

	
	public void right() 
	//moves tape head one cell right 
	{
		if (right.empty()) {
			right.add('*');
		}
		left.add(current);
		current = right.get();
		right.pop();
	}

	
	public void display() 
	//prints string representation of left, current, and right
	//with each separated by spaces with current encased in brackets
	{
		Stack<Character> tempLeft = new StackList<Character>();
		Stack<Character> tempRight = new StackList<Character>();

		while (!left.empty()) {
			tempLeft.add(left.pop());
		}
		while (!tempLeft.empty()) {
			System.out.print(tempLeft.get() + " ");
			left.add(tempLeft.pop());
		}
		System.out.print("[" + current + "]");
		while (!right.empty()) {
			tempRight.add(right.pop());
		}
		while (!tempRight.empty()) {
			System.out.print(" " + tempRight.get());
			right.add(tempRight.pop());
		}
		System.out.println("");
	}

	
	public static void main(String[] args) 
	//main program
	{
		if (args.length != 1) { // checks parameters
			System.out.println("usage: java Tape 'command-string'");
		} else {
			Tape t = new Tape();
			String s = args[0];
			for (int i = 0; i < s.length(); i++) {
				char c = s.charAt(i);
				if (c == '?') {
					t.display();
				} else if (c == '<') {
					t.left();
				} else if (c == '>') {
					t.right();
				} else {
					t.store(c);
				}
			}
		}
	}
}
